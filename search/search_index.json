{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The purpose of this tutorial are for programmers to gain the ability to understand how to implement and use different data structures and algorithms to solve non-trivial problems. What are Data Structures? Data structures store information in various ways. What are Algorithms? These are step-by-step procedures that a program will take, akin to someone following a food recipe. Asymptotic Analysis This is the study of an algorithm to determine how quickly it will execute given various inputs. Time Complexity In layman's terms, this describes how long it will take for a computer to execute your program. Space Complexity This describes how much extra memory the computer will need to execute your program.","title":"Overview"},{"location":"#what-are-data-structures","text":"Data structures store information in various ways.","title":"What are Data Structures?"},{"location":"#what-are-algorithms","text":"These are step-by-step procedures that a program will take, akin to someone following a food recipe.","title":"What are Algorithms?"},{"location":"#asymptotic-analysis","text":"This is the study of an algorithm to determine how quickly it will execute given various inputs.","title":"Asymptotic Analysis"},{"location":"#time-complexity","text":"In layman's terms, this describes how long it will take for a computer to execute your program.","title":"Time Complexity"},{"location":"#space-complexity","text":"This describes how much extra memory the computer will need to execute your program.","title":"Space Complexity"},{"location":"dstruct-basic/","text":"","title":"Overview"},{"location":"dstruct-basic/arrays/","text":"Code sample link: https://replit.com/@jjoco/dynamic-arrays","title":"Dynamic Arrays"},{"location":"dstruct-basic/linkedlist/","text":"Code sample link: https://replit.com/@jjoco/linked-lists","title":"Linked Lists"},{"location":"dstruct-basic/maps/","text":"Code sample link: https://replit.com/@jjoco/maps","title":"Maps"},{"location":"dstruct-basic/queues/","text":"Code sample link: https://replit.com/@jjoco/queues","title":"Queues"},{"location":"dstruct-basic/sets/","text":"Code sample link: https://replit.com/@jjoco/sets","title":"Sets"},{"location":"dstruct-basic/stacks/","text":"Code sample link: https://replit.com/@jjoco/stacks","title":"Stacks"},{"location":"dstruct-basic/tables/","text":"Code sample link: https://replit.com/@jjoco/lookup-tables","title":"Maps"},{"location":"graphs/","text":"","title":"Overview"},{"location":"graphs/adjacent/","text":"Code sample link: https://replit.com/@jjoco/adjacency-lists Code sample link: https://replit.com/@jjoco/adjacency-matrices","title":"Adjacency lists and matrices"},{"location":"graphs/bellman/","text":"Code sample link: https://replit.com/@jjoco/bellman-ford","title":"Bellman-Ford"},{"location":"graphs/bfs/","text":"Code sample link: https://replit.com/@jjoco/bfs","title":"Breadth-First Search"},{"location":"graphs/dfs/","text":"Code sample link: https://replit.com/@jjoco/dfs","title":"Depth-First Search"},{"location":"graphs/dijkstra/","text":"Code sample link: https://replit.com/@jjoco/dijkstra","title":"Dijkstra"},{"location":"graphs/direct/","text":"","title":"Directional graphs"},{"location":"graphs/unidirect/","text":"","title":"Unidirectional graphs"},{"location":"misc/","text":"","title":"Index"},{"location":"misc/backtrack/","text":"Code sample link: https://replit.com/@jjoco/backtracking","title":"Backtracking"},{"location":"misc/dynamic/","text":"Code sample link: https://replit.com/@jjoco/dynamic-programming","title":"Dynamic programming"},{"location":"sorting/","text":"","title":"Overview"},{"location":"sorting/binary/","text":"Code sample link: https://replit.com/@jjoco/binary-search","title":"Binary search"},{"location":"sorting/bucket/","text":"Code sample link: https://replit.com/@jjoco/bucketsort","title":"Bucket/radix sort"},{"location":"sorting/insertion/","text":"Code sample link: https://replit.com/@jjoco/insertion-sort","title":"Insertion Sort"},{"location":"sorting/linear/","text":"Code sample link: https://replit.com/@jjoco/linear-search","title":"Linear search"},{"location":"sorting/merge/","text":"Code sample link: https://replit.com/@jjoco/mergesort","title":"Mergesort"},{"location":"sorting/quick/","text":"Code sample link: https://replit.com/@jjoco/quicksort","title":"Quicksort"},{"location":"sorting/shell/","text":"Code sample link: https://replit.com/@jjoco/shellsort","title":"Shellsort"},{"location":"trees/","text":"","title":"Overview"},{"location":"trees/maxheap/","text":"Code sample link: https://replit.com/@jjoco/max-heaps","title":"Max heaps"},{"location":"trees/minheap/","text":"Code sample link: https://replit.com/@jjoco/min-heaps","title":"Min heaps"},{"location":"trees/serialize/","text":"Code sample link: https://replit.com/@jjoco/serializing-trees","title":"Serializing"},{"location":"trees/special/","text":"","title":"Special trees"},{"location":"trees/traversals/","text":"Code sample link: https://replit.com/@jjoco/tree-traversals","title":"Traversals"}]}